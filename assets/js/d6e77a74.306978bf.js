"use strict";(self.webpackChunkcnoe=self.webpackChunkcnoe||[]).push([[9369],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>y});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),f=o,y=p["".concat(l,".").concat(f)]||p[f]||d[f]||i;return n?r.createElement(y,a(a({ref:t},u),{},{components:n})):r.createElement(y,a({ref:t},u))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3149:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const i={sidebar_position:10,description:"CD gets infrastructure and application resources into a state, ready for receiving production workload."},a="Continuous Delivery (CD)",s={unversionedId:"intro/capabilities/continuous-delivery",id:"intro/capabilities/continuous-delivery",title:"Continuous Delivery (CD)",description:"CD gets infrastructure and application resources into a state, ready for receiving production workload.",source:"@site/docs/intro/capabilities/continuous-delivery.mdx",sourceDirName:"intro/capabilities",slug:"/intro/capabilities/continuous-delivery",permalink:"/docs/intro/capabilities/continuous-delivery",draft:!1,editUrl:"https://github.com/cnoe-io/website/tree/main/docs/intro/capabilities/continuous-delivery.mdx",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,description:"CD gets infrastructure and application resources into a state, ready for receiving production workload."},sidebar:"tutorialSidebar",previous:{title:"Infrastructure as Code (IaC)",permalink:"/docs/intro/capabilities/infra-as-code"},next:{title:"Workflow Orchestration",permalink:"/docs/intro/capabilities/workflow-orchestration"}},l={},c=[],u={toc:c};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"continuous-delivery-cd"},"Continuous Delivery (CD)"),(0,o.kt)("p",null,"Continuous delivery\u2019s ultimate goal is to get infrastructure and application resources into a state, ready for receiving production workload."),(0,o.kt)("p",null,"GitOps is a new trend in continuous delivery where automation is put in place to ensure the desired state of the world matches the perceived state of the world. This is achieved by connecting the source of truth (usually a git repository holding definition of application and infrastructure resources) to a reconciling controller that ensures consistency of the spun up resource to what is stored in Git. ArgoCD and FluxCD are two prominent implementations of these CD practices. While very similar in nature, ArgoCD and FluxCD and the likes could work in tandem and are not mutually exclusive."),(0,o.kt)("p",null,"Under the CD category, the CNOE community can help users evaluate which personas (e.g operator, developer) would be the most likely beneficiaries from each category of tooling. It is also worth noting that while GitOps is the dominant CD strategy in the CNCF space, it does not need to be the one or the only practice adopted by the CNOE users. Pluggability aspects of CNOE should ensure that customers have enough freedom in choosing their alternative."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Automation to build, test and release software upon every successful merge to a mainline branch"),(0,o.kt)("li",{parentName:"ul"},"Allows for fully automated deployments when \u201cContinuous Deployment\u201d is enabled"),(0,o.kt)("li",{parentName:"ul"},"Facilitates testing that goes beyond simple unit or integration tests. Frequently used in conjunction with end to end (E2E) or functional tests."),(0,o.kt)("li",{parentName:"ul"},"Can be used in conjunction with safe production deployment methods like Blue/Green or Canary deployments"),(0,o.kt)("li",{parentName:"ul"},"Can also make use of feature flags to allow for \u201csoft\u201d or \u201cdark launches\u201d of features and functionality not yet ready for broad consumption"),(0,o.kt)("li",{parentName:"ul"},"Generally gets code in the hands of consumers faster, surfacing bugs quicker and shortening product feedback loops.")))}p.isMDXComponent=!0}}]);