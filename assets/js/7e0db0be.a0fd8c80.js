"use strict";(self.webpackChunkcnoe=self.webpackChunkcnoe||[]).push([[5719],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(t),f=a,m=d["".concat(l,".").concat(f)]||d[f]||u[f]||o;return t?r.createElement(m,i(i({ref:n},p),{},{components:t})):r.createElement(m,i({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=f;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[d]="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},8505:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var r=t(7462),a=(t(7294),t(3905));const o={sidebar_position:3,description:"Scaffolder Backend",title:"Scaffolder Backend Plugin"},i="CNOE Scaffolder Backend Plugin",c={unversionedId:"reference-implementation/plugins/scaffolder-backend",id:"reference-implementation/plugins/scaffolder-backend",title:"Scaffolder Backend Plugin",description:"Scaffolder Backend",source:"@site/docs/reference-implementation/plugins/scaffolder-backend.md",sourceDirName:"reference-implementation/plugins",slug:"/reference-implementation/plugins/scaffolder-backend",permalink:"/docs/reference-implementation/plugins/scaffolder-backend",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reference-implementation/plugins/scaffolder-backend.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,description:"Scaffolder Backend",title:"Scaffolder Backend Plugin"},sidebar:"tutorialSidebar",previous:{title:"Argo Workflows Plugin",permalink:"/docs/reference-implementation/plugins/argo-workflows"},next:{title:"Scaffolder Frontend Plugin",permalink:"/docs/reference-implementation/plugins/scaffolder-frontend"}},l={},s=[{value:"Getting Started",id:"getting-started",level:2},{value:"List of Actions",id:"list-of-actions",level:2}],p={toc:s};function d(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"cnoe-scaffolder-backend-plugin"},"CNOE Scaffolder Backend Plugin"),(0,a.kt)("admonition",{title:"github repo",type:"note"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/cnoe-io/plugin-scaffolder-actions"},"cnoe-io/plugin-scaffolder-actions"))),(0,a.kt)("h2",{id:"getting-started"},"Getting Started"),(0,a.kt)("p",null,"Add to your Backstage app."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# From your Backstage root directory\nyarn add --cwd packages/backend @cnoe-io/scaffolder-actions-plugin\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# To be able to keep using the built-in actions.\nyarn add --cwd packages/backend @backstage/integration\n")),(0,a.kt)("p",null,"Append it to your existing actions in ",(0,a.kt)("inlineCode",{parentName:"p"},"packages/backend/src/plugins/scaffolder.ts")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { CatalogClient } from '@backstage/catalog-client';\nimport { createRouter, createBuiltinActions } from '@backstage/plugin-scaffolder-backend';\nimport { ScmIntegrations } from '@backstage/integration';\nimport { Router } from 'express';\nimport type { PluginEnvironment } from '../types';\nimport {\n  createSanitizeResource,\n  createVerifyDependency,\n  createKubernetesApply,\n} from \"@cnoe-io/scaffolder-actions\";\n\nexport default async function createPlugin(\n  env: PluginEnvironment,\n): Promise<Router> {\n  const catalogClient = new CatalogClient({ discoveryApi: env.discovery });\n  const integrations = ScmIntegrations.fromConfig(env.config);\n\n  const builtInActions = createBuiltinActions({\n    integrations,\n    catalogClient,\n    config: env.config,\n    reader: env.reader,\n  });\n  \n  const cnoeActions = [\n    createSanitizeResource(),\n    createVerifyDependency(),\n    createKubernetesApply(env.config),\n  ]\n\n  const actions = [\n      ...builtInActions,\n      ...cnoeActions,\n  ]\n\n  return await createRouter({\n    actions,\n    catalogClient,\n    logger: env.logger,\n    config: env.config,\n    database: env.database,\n    reader: env.reader,\n    identity: env.identity,\n  });\n}\n")),(0,a.kt)("p",null,"Done! You can now use any of the action in your software templates."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: scaffolder.backstage.io/v1beta3\nkind: Template\nmetadata:\n  name: hello-world-on-kubernetes\n  title: Hello World on Kubernetes\nspec:\n  steps:\n    - id: sanitize-resource\n      name: Sanitize Resource\n      action: cnoe:utils:sanitize\n      input:\n        resource: ${{ serialize.output }}\n")),(0,a.kt)("h2",{id:"list-of-actions"},"List of Actions"),(0,a.kt)("p",null,"Here is a list of running actions."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Action"),(0,a.kt)("th",{parentName:"tr",align:null},"id"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"createKubernetesApply"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"cnoe:kubernetes:apply")),(0,a.kt)("td",{parentName:"tr",align:null},"Apply Kubernetes manifest to a template")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"createVerifyDependency"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"cnoe:verify:dependency")),(0,a.kt)("td",{parentName:"tr",align:null},"Verify resource dependencies for CNOE")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"createSanitizeResource"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"cnoe:utils:sanitize")),(0,a.kt)("td",{parentName:"tr",align:null},"Sanitize resources (remove empty fields) before further processing")))),(0,a.kt)("p",null,"For more detailed information about these actions, go to ",(0,a.kt)("inlineCode",{parentName:"p"},"/create/actions")," endpoint of your Backstage instance after installing these actions.\nIf you are running this locally, the endpoint should be ",(0,a.kt)("inlineCode",{parentName:"p"},"http://localhost:3000/create/actions")))}d.isMDXComponent=!0}}]);