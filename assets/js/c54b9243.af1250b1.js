"use strict";(self.webpackChunkcnoe=self.webpackChunkcnoe||[]).push([[7219],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),c=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,g=d["".concat(s,".").concat(m)]||d[m]||p[m]||a;return n?i.createElement(g,o(o({ref:t},u),{},{components:n})):i.createElement(g,o({ref:t},u))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<a;c++)o[c]=n[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1161:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var i=n(7462),r=(n(7294),n(3905));const a={sidebar_position:5,description:"Using the built-in OCI registry",title:"Local OCI Registry",index:5},o=void 0,l={unversionedId:"reference-implementation/installations/idpbuilder/local-oci-registry",id:"reference-implementation/installations/idpbuilder/local-oci-registry",title:"Local OCI Registry",description:"Using the built-in OCI registry",source:"@site/docs/reference-implementation/installations/idpbuilder/local-oci-registry.md",sourceDirName:"reference-implementation/installations/idpbuilder",slug:"/reference-implementation/installations/idpbuilder/local-oci-registry",permalink:"/docs/reference-implementation/installations/idpbuilder/local-oci-registry",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reference-implementation/installations/idpbuilder/local-oci-registry.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,description:"Using the built-in OCI registry",title:"Local OCI Registry",index:5},sidebar:"tutorialSidebar",previous:{title:"Override built-in services",permalink:"/docs/reference-implementation/installations/idpbuilder/override"},next:{title:"Amazon EKS",permalink:"/docs/reference-implementation/installations/app-idp"}},s={},c=[{value:"Image Tags",id:"image-tags",level:3},{value:"Pulling Images",id:"pulling-images",level:3},{value:"No Pull Secret Needed",id:"no-pull-secret-needed",level:4},{value:"Referencing Images In Manifests On The Idpbuilder K8s Cluster",id:"referencing-images-in-manifests-on-the-idpbuilder-k8s-cluster",level:3},{value:"Only Works with Subdomain Based Idpbuilder Installations",id:"only-works-with-subdomain-based-idpbuilder-installations",level:3},{value:"Pulling Images From Inside Idpbuilder K8s Cluster:",id:"pulling-images-from-inside-idpbuilder-k8s-cluster",level:3}],u={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,'The local Gitea instance created by idpbuilder contains a built-in OCI registry for hosting container images as "packages" in Gitea nomenclature.'),(0,r.kt)("p",null,"It is a standard OCI registry, so the API should be compatible with any tools that are OCI compliant. That includes the ",(0,r.kt)("inlineCode",{parentName:"p"},"docker")," cli."),(0,r.kt)("p",null,"For example, you can push an image by running:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker login gitea.cnoe.localtest.me:8443                                          \n# see the note section below for retrieving your password.\nUsername: giteaAdmin\nPassword: \n\n# you can build your own image instead of pulling.\ndocker pull docker.io/library/ubuntu:24.04 \ndocker tag docker.io/library/ubuntu:24.04 gitea.cnoe.localtest.me:8443/giteaadmin/ubuntu:24.04\n\ndocker push gitea.cnoe.localtest.me:8443/giteaadmin/ubuntu:24.04\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"NOTE"),": You can get the giteaAdmin password in the same way as you do for the web or git interface."),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"./idpbuilder get secrets -p gitea")),(0,r.kt)("p",{parentName:"blockquote"},"Or you can use this to login directly:"),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre"},"idpbuilder get secrets -p gitea -o json | \\\n  jq '.[0].data.password' -r | \\\n  docker login -u giteaAdmin --password-stdin gitea.cnoe.localtest.me:8443\n"))),(0,r.kt)("h3",{id:"image-tags"},"Image Tags"),(0,r.kt)("p",null,"Images pushed to Gitea OCI registry must be tagged with the following naming convention: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{registry}/{owner}/{image}\n")),(0,r.kt)("p",null,"For example: ",(0,r.kt)("inlineCode",{parentName:"p"},"gitea.cnoe.localtest.me:8443/giteaadmin/ubuntu:24.04")),(0,r.kt)("p",null,"This is a naming convention enforced by Gitea. Please see ",(0,r.kt)("a",{parentName:"p",href:"https://docs.gitea.com/usage/packages/container"},"the Gitea documentation")," for more information."),(0,r.kt)("h3",{id:"pulling-images"},"Pulling Images"),(0,r.kt)("p",null,"You can pull an image back to your local machine using your docker client like so:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker pull gitea.cnoe.localtest.me:8443/giteaadmin/ubuntu:24.04\n")),(0,r.kt)("h4",{id:"no-pull-secret-needed"},"No Pull Secret Needed"),(0,r.kt)("p",null,"The Gitea instance allows for anonymous read access. This means that you can pull git repo contents and container images without logging in."),(0,r.kt)("h3",{id:"referencing-images-in-manifests-on-the-idpbuilder-k8s-cluster"},"Referencing Images In Manifests On The Idpbuilder K8s Cluster"),(0,r.kt)("p",null,"You can create a pod or a deployment that references images in the local registry. For example, to create a pod:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: Pod\nmetadata:\n  namespace: default\n  name: debug-pod\nspec:\n  containers:\n    - image: gitea.cnoe.localtest.me:8443/giteaadmin/ubuntu:24.04\n      name: debug-pod\n      command:\n        - sleep\n        - "3600"\n')),(0,r.kt)("h3",{id:"only-works-with-subdomain-based-idpbuilder-installations"},"Only Works with Subdomain Based Idpbuilder Installations"),(0,r.kt)("p",null,"Right now because of the way the OCI registry specifications discovers information about a repo, this will only work with subdomain ",(0,r.kt)("inlineCode",{parentName:"p"},"gitea.cnoe.localtest.me"),"\nbased installations of idpbuilder's core capabilities."),(0,r.kt)("p",null,"If you would like to use path based routing, you will have to install and manage your own OCI registry at this time.\nOther registries might be able to handle this better, however which registries and how to configure them is beyond the scope of this document."),(0,r.kt)("p",null,'For more info on the OCI registry spec and the root cause of this "discovery" issue see the spec here:\n',(0,r.kt)("a",{parentName:"p",href:"https://specs.opencontainers.org/distribution-spec/?v=v1.0.0#checking-if-content-exists-in-the-registry"},"https://specs.opencontainers.org/distribution-spec/?v=v1.0.0#checking-if-content-exists-in-the-registry")),(0,r.kt)("h3",{id:"pulling-images-from-inside-idpbuilder-k8s-cluster"},"Pulling Images From Inside Idpbuilder K8s Cluster:"),(0,r.kt)("p",null,"Because we are using an NGINX Ingress and pushing our image from off cluster,\nGitea and its OCI registry think all images pushed to it are prefixed with ",(0,r.kt)("inlineCode",{parentName:"p"},"gitea.cnoe.localtest.me:8443"),"."),(0,r.kt)("p",null,"This is correct by the OCI spec standards. However, when you are on the cluster, that ingress is not available to you.\nYou can use the service name of gitea, but gitea will not know what images are being asked for at the svc domain name. To work around this issue, we use containerd to rewrite those image names so that they can be referenced at the external url:"),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/cnoe-io/idpbuilder/blob/main/pkg/kind/resources/kind.yaml.tmpl"},"the Kind config")," for how this is done."))}d.isMDXComponent=!0}}]);