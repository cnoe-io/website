"use strict";(self.webpackChunkcnoe=self.webpackChunkcnoe||[]).push([[942],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var i=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},o=Object.keys(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=i.createContext({}),l=function(e){var t=i.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=l(e.components);return i.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(r),f=n,m=p["".concat(s,".").concat(f)]||p[f]||d[f]||o;return r?i.createElement(m,a(a({ref:t},u),{},{components:r})):i.createElement(m,a({ref:t},u))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,a=new Array(o);a[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[p]="string"==typeof e?e:n,a[1]=c;for(var l=2;l<o;l++)a[l]=r[l];return i.createElement.apply(null,a)}return i.createElement.apply(null,r)}f.displayName="MDXCreateElement"},601:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var i=r(7462),n=(r(7294),r(3905));const o={sidebar_position:12,description:"It allows for the dynamic lookup or querying of a producer\u2019s interface/API details by consumers of that service."},a="Service Discovery",c={unversionedId:"intro/capabilities/service-discovery",id:"intro/capabilities/service-discovery",title:"Service Discovery",description:"It allows for the dynamic lookup or querying of a producer\u2019s interface/API details by consumers of that service.",source:"@site/docs/intro/capabilities/service-discovery.mdx",sourceDirName:"intro/capabilities",slug:"/intro/capabilities/service-discovery",permalink:"/docs/intro/capabilities/service-discovery",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro/capabilities/service-discovery.mdx",tags:[],version:"current",sidebarPosition:12,frontMatter:{sidebar_position:12,description:"It allows for the dynamic lookup or querying of a producer\u2019s interface/API details by consumers of that service."},sidebar:"tutorialSidebar",previous:{title:"Workflow Orchestration",permalink:"/docs/intro/capabilities/workflow-orchestration"},next:{title:"Secret Management",permalink:"/docs/intro/capabilities/secret-management"}},s={},l=[],u={toc:l};function p(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,i.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"service-discovery"},"Service Discovery"),(0,n.kt)("p",null,"Service discovery is a capability that allows for the dynamic lookup or querying of a producer\u2019s interface/API details by consumers of that service. Frequently this is based on some sort of centralized key/value or database called a Service Registry, but it can be distributed like in the case of the Domain Name System (DNS). When distributed, care must be taken to handle inconsistency in the results of queries to the Service Registry."),(0,n.kt)("p",null,"Service discovery can be used in conjunction with configuration repositories, and secret repositories to allow for consumers to bootstrap themselves at startup or accept dynamic runtime changes to configuration."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Allows for dynamic lookup or querying of service information"),(0,n.kt)("li",{parentName:"ul"},"Usually based on a database or registry"),(0,n.kt)("li",{parentName:"ul"},"Can be decentralized but care must be taken to handle inconsistency"),(0,n.kt)("li",{parentName:"ul"},"Often used in conjunction with config and secret repositories for app bootstrapping"),(0,n.kt)("li",{parentName:"ul"},"Common Tooling:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"DNS"),(0,n.kt)("li",{parentName:"ul"},"Consul"),(0,n.kt)("li",{parentName:"ul"},"ZooKeeper"),(0,n.kt)("li",{parentName:"ul"},"etcd")))))}p.isMDXComponent=!0}}]);