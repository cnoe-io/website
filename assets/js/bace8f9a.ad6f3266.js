"use strict";(self.webpackChunkcnoe=self.webpackChunkcnoe||[]).push([[9856],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,k=d["".concat(p,".").concat(m)]||d[m]||c[m]||i;return n?r.createElement(k,l(l({ref:t},u),{},{components:n})):r.createElement(k,l({ref:t},u))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[d]="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9434:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:1,description:"Quick Start",title:"Quick Start",index:1},l=void 0,o={unversionedId:"reference-implementation/installations/idpbuilder/quick-start",id:"reference-implementation/installations/idpbuilder/quick-start",title:"Quick Start",description:"Quick Start",source:"@site/docs/reference-implementation/installations/idpbuilder/quick-start.md",sourceDirName:"reference-implementation/installations/idpbuilder",slug:"/reference-implementation/installations/idpbuilder/quick-start",permalink:"/docs/reference-implementation/installations/idpbuilder/quick-start",draft:!1,editUrl:"https://github.com/cnoe-io/website/tree/main/docs/reference-implementation/installations/idpbuilder/quick-start.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Quick Start",title:"Quick Start",index:1},sidebar:"tutorialSidebar",previous:{title:"idpBuilder on Local Machine",permalink:"/docs/reference-implementation/installations/idpbuilder/"},next:{title:"Using the idpBuilder",permalink:"/docs/reference-implementation/installations/idpbuilder/usage"}},p={},s=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"Running in Codespaces",id:"running-in-codespaces",level:2}],u={toc:s};function d(e){let{components:t,...i}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("p",null,"A container engine is needed locally, such as:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Supported"),(0,a.kt)("th",{parentName:"tr",align:null},"Remark"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://www.docker.com/get-started/"},"Docker desktop")),(0,a.kt)("td",{parentName:"tr",align:null},"Yes"),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://podman-desktop.io/"},"Podman desktop")),(0,a.kt)("td",{parentName:"tr",align:null},"No"),(0,a.kt)("td",{parentName:"tr",align:null},"idpbuilder can create a cluster using podman ",(0,a.kt)("a",{parentName:"td",href:"https://docs.podman.io/en/latest/markdown/podman-machine-set.1.html#rootful"},"rootful"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://runfinch.com/"},"Finch")),(0,a.kt)("td",{parentName:"tr",align:null},"No"),(0,a.kt)("td",{parentName:"tr",align:null})))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Note"),": Set the ",(0,a.kt)("inlineCode",{parentName:"p"},"DOCKER_HOST")," env var property using ",(0,a.kt)("inlineCode",{parentName:"p"},"podman"),' to let idpbuilder to talk with the engine (e.g  export DOCKER_HOST="unix:///var/run/docker.sock")'),(0,a.kt)("h2",{id:"quick-start"},"Quick Start"),(0,a.kt)("p",null,"You can execute the following bash script to get started with a running version of the idpBuilder (inspect the script first if you have concerns):"),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre"},"curl -fsSL https://raw.githubusercontent.com/cnoe-io/idpbuilder/main/hack/install.sh | bash\n"))),(0,a.kt)("p",null,"verify a successful installation by running the following command and inspecting the output for the right version:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"idpbuilder version\n")),(0,a.kt)("p",null,"Alternatively, you can run the following commands for a manual installation:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"version=$(curl -Ls -o /dev/null -w %{url_effective} https://github.com/cnoe-io/idpbuilder/releases/latest)\nversion=${version##*/}\ncurl -L -o ./idpbuilder.tar.gz \"https://github.com/cnoe-io/idpbuilder/releases/download/${version}/idpbuilder-$(uname | awk '{print tolower($0)}')-$(uname -m | sed 's/x86_64/amd64/').tar.gz\"\ntar xzf idpbuilder.tar.gz\n\n./idpbuilder version\n# example output\n# idpbuilder 0.4.1 go1.21.5 linux/amd64\n")),(0,a.kt)("p",null,"Or, you can download the latest binary from ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/cnoe-io/idpbuilder/releases/latest"},"the release page"),"."),(0,a.kt)("h2",{id:"running-in-codespaces"},"Running in Codespaces"),(0,a.kt)("p",null,"You can run idpbuilder in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/features/codespaces"},"Codespaces"),"."),(0,a.kt)("p",null,"Create a Codespaces instance. ",(0,a.kt)("img",{alt:"img",src:n(6661).Z,width:"993",height:"554"})),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Wait for it to be ready. It may take several minutes.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Get the latest release of idpbuilder:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"}," version=$(curl -Ls -o /dev/null -w %{url_effective} https://github.com/cnoe-io/idpbuilder/releases/latest)\n version=${version##*/}\n curl -L -o ./idpbuilder.tar.gz \"https://github.com/cnoe-io/idpbuilder/releases/download/${version}/idpbuilder-$(uname | awk '{print tolower($0)}')-$(uname -m | sed 's/x86_64/amd64/').tar.gz\"\n tar xzf idpbuilder.tar.gz\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Run idpbuilder:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"}," idpbuilder create --protocol http  \\\n --host ${CODESPACE_NAME}-8080.${GITHUB_CODESPACES_PORT_FORWARDING_DOMAIN} \\\n --port 8080 --use-path-routing\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Because Codespaces gives a single externally routable host name for an instance, idpbuilder must deploy with path based routing.\nThis means ArgoCD and Gitea UIs are given with the following commands."),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"ArgoCD: ",(0,a.kt)("inlineCode",{parentName:"li"},"echo https://${CODESPACE_NAME}-8080.${GITHUB_CODESPACES_PORT_FORWARDING_DOMAIN}/argocd")),(0,a.kt)("li",{parentName:"ul"},"Gitea: ",(0,a.kt)("inlineCode",{parentName:"li"},"echo https://${CODESPACE_NAME}-8080.${GITHUB_CODESPACES_PORT_FORWARDING_DOMAIN}/gitea"))),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Note that not all examples work with path based routing.")))))}d.isMDXComponent=!0},6661:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/codespaces-create-8408d32852051c5e4cbad51cde41dc4c.png"}}]);