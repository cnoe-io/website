"use strict";(self.webpackChunkcnoe=self.webpackChunkcnoe||[]).push([[9648],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),d=a,m=p["".concat(s,".").concat(d)]||p[d]||f[d]||o;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5484:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:3,description:"Scaffolder Frontend",title:"Scaffolder Frontend Plugin"},i="CNOE Scaffolder Frontend Plugin",l={unversionedId:"reference-implementation/plugins/scaffolder-frontend",id:"reference-implementation/plugins/scaffolder-frontend",title:"Scaffolder Frontend Plugin",description:"Scaffolder Frontend",source:"@site/docs/reference-implementation/plugins/scaffolder-frontend.md",sourceDirName:"reference-implementation/plugins",slug:"/reference-implementation/plugins/scaffolder-frontend",permalink:"/docs/reference-implementation/plugins/scaffolder-frontend",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reference-implementation/plugins/scaffolder-frontend.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,description:"Scaffolder Frontend",title:"Scaffolder Frontend Plugin"},sidebar:"tutorialSidebar",previous:{title:"Scaffolder Backend Plugin",permalink:"/docs/reference-implementation/plugins/scaffolder-backend"},next:{title:"Apache Spark Plugin",permalink:"/docs/reference-implementation/plugins/spark-plugin"}},s={},c=[{value:"Kubernetes Cluster Picker",id:"kubernetes-cluster-picker",level:2},{value:"Configuration",id:"configuration",level:3},{value:"Usage",id:"usage",level:3}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"cnoe-scaffolder-frontend-plugin"},"CNOE Scaffolder Frontend Plugin"),(0,a.kt)("admonition",{title:"github repo",type:"note"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/cnoe-io/plugin-scaffolder-actions-frontend"},"cnoe-io/plugin-scaffolder-actions-frontend"))),(0,a.kt)("h2",{id:"kubernetes-cluster-picker"},"Kubernetes Cluster Picker"),(0,a.kt)("p",null,"Allows you to display and select Kubernetes clusters configured in your Backstage configuration."),(0,a.kt)("p",null,"Optionally, you can extract user token to use against the selected cluster.\nNote that the target cluster and Kubernetes configuration in Backstage must support this.\nThis typically means you have to configure your cluster to accept a OIDC token and ",(0,a.kt)("a",{parentName:"p",href:"https://backstage.io/docs/features/kubernetes/configuration#clustersoidctokenprovider-optional"},"client side authentication")," must be configured in Backstage."),(0,a.kt)("h3",{id:"configuration"},"Configuration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'// in packages/app/src/App.tsx\n\nconst routes = (\n  ...\n  <Route path="/create" element={<ScaffolderPage />}>\n    <ScaffolderFieldExtensions>\n      <KubernetesClusterPickerExtension />\n    </ScaffolderFieldExtensions>\n  </Route>  \n  ...  \n)\n')),(0,a.kt)("h3",{id:"usage"},"Usage"),(0,a.kt)("p",null,"The plugin adds ",(0,a.kt)("inlineCode",{parentName:"p"},"KubernetesClusterPicker")," as an available UI field option. "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"requestUserCredentials")," Optional. Requests the user's token for use for the target cluster."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"allowedClusters")," Optional. Specifies which clusters the user use with this template.")),(0,a.kt)("p",null,"Example usage:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"# In your scaffolder template\napiVersion: scaffolder.backstage.io/v1beta3\nkind: Template\nspec:\n  parameters:\n    - title: Enter some details\n      properties:\n        clusterName:\n          title: Name of the cluster to deploy manfiest into.\n          type: string\n          ui:field: KubernetesClusterPicker\n          ui:options:\n            allowedClusters:\n              - cluster-1\n              - cluster-2\n            requestUserCredentials:\n              secretKey: MY_TOKEN\n    - id: fetch-base\n      name: Fetch Base\n      action: fetch:template\n      input:\n        url: ./templates\n        values:\n          token: ${{ secrets.MY_TOKEN }}\n")),(0,a.kt)("p",null,"In the above example, the users will be presented with a choice of two clusters, ",(0,a.kt)("inlineCode",{parentName:"p"},"cluster-1")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"cluster-2"),"."),(0,a.kt)("p",null,"It also specified ",(0,a.kt)("inlineCode",{parentName:"p"},"requestUserCredentials"),". This means the plugin will attempt to retrieve user token for the cluster, then store it in the template secret field called ",(0,a.kt)("inlineCode",{parentName:"p"},"MY_TOKEN"),"."),(0,a.kt)("p",null,"This token is then used in the next step by referencing the token value with ",(0,a.kt)("inlineCode",{parentName:"p"},"${{ secrets.MY_TOKEN }}")))}p.isMDXComponent=!0}}]);