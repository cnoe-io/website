"use strict";(self.webpackChunkcnoe=self.webpackChunkcnoe||[]).push([[1172],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>b});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,b=d["".concat(c,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(b,o(o({ref:t},p),{},{components:n})):r.createElement(b,o({ref:t},p))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[d]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2139:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:4,description:"IDP builder is a single binary IDP launcher.",title:"idpBuilder CLI"},o="Installation",l={unversionedId:"reference-implementation/idpbuilder/idpbuilder",id:"reference-implementation/idpbuilder/idpbuilder",title:"idpBuilder CLI",description:"IDP builder is a single binary IDP launcher.",source:"@site/docs/reference-implementation/idpbuilder/idpbuilder.md",sourceDirName:"reference-implementation/idpbuilder",slug:"/reference-implementation/idpbuilder/",permalink:"/docs/reference-implementation/idpbuilder/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reference-implementation/idpbuilder/idpbuilder.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,description:"IDP builder is a single binary IDP launcher.",title:"idpBuilder CLI"},sidebar:"tutorialSidebar",previous:{title:"Verifications",permalink:"/docs/reference-implementation/extensions/verification"},next:{title:"Architecture",permalink:"/docs/reference-implementation/idpbuilder/architecture/"}},c={},s=[{value:"IDP installation flow",id:"idp-installation-flow",level:2}],p={toc:s};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"installation"},"Installation"),(0,a.kt)("admonition",{title:"github repo",type:"note"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/cnoe-io/idpbuilder"},"cnoe-io/idpbuilder"))),(0,a.kt)("h2",{id:"idp-installation-flow"},"IDP installation flow"),(0,a.kt)("p",null,"The idpbuilder cli installs a local internal developer portal using the following pattern:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create a new Kind cluster if one doesn't exist or if ",(0,a.kt)("inlineCode",{parentName:"li"},"--recreate")," switch is passed."),(0,a.kt)("li",{parentName:"ol"},"Install ",(0,a.kt)("a",{parentName:"li",href:"https://about.gitea.com/"},"Gitea")," available at\n",(0,a.kt)("a",{parentName:"li",href:"https://gitea.cnoe.localtest.me:8443"},"https://gitea.cnoe.localtest.me:8443")),(0,a.kt)("li",{parentName:"ol"},"Install ",(0,a.kt)("a",{parentName:"li",href:"https://argoproj.github.io/cd/"},"ArgoCD")," and configure it to be able to monitor applications from the Gitea service, available at ",(0,a.kt)("a",{parentName:"li",href:"https://argocd.cnoe.localtest.me:8443"},"https://argocd.cnoe.localtest.me:8443")),(0,a.kt)("li",{parentName:"ol"},"Install ",(0,a.kt)("a",{parentName:"li",href:"https://www.nginx.com/products/nginx-ingress-controller/"},"Nginx")," for\ningress traffic management."),(0,a.kt)("li",{parentName:"ol"},"Argo apps  for ArgoCD, Gitea, and Nginx ingress are reconciled by ArgoCD."),(0,a.kt)("li",{parentName:"ol"},"Command line exits leaving the cluster running with the IDP stack installed.")),(0,a.kt)("p",null,"The tool also comes with the option to install the CNOE recommended IDP stack:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Backstage becomes available on your localhost via an Nginx ingress\nat ",(0,a.kt)("a",{parentName:"li",href:"https://backstage.cnoe.localtest.me:8443"},"https://backstage.cnoe.localtest.me:8443")),(0,a.kt)("li",{parentName:"ol"},"Keycloak becomes available on your localhost via an Nginx ingress at\n",(0,a.kt)("a",{parentName:"li",href:"https://keycloak.cnoe.localtest.me:8443"},"https://keycloak.cnoe.localtest.me:8443")),(0,a.kt)("li",{parentName:"ol"},"Crossplane becomes available on your localhost, managing Crossplane resources\ndeployed to the Kind cluster")),(0,a.kt)("p",null,"Use kubectl to get the correct IDP address/hostname to connect to."),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"Docker must be installed and available to the current user."),(0,a.kt)("li",{parentName:"ul"},"Internal Developer Portal components are installed as ArgoCD Applications."),(0,a.kt)("li",{parentName:"ul"},"The ArgoCD apps that are installed are embedded in the cli binary. See ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/cnoe-io/idpbuilder/blob/56089e4ae3b27cf90641bfbff2a96c36dd5263e1/pkg/controllers/localbuild/controller.go#L211-L243"},"cnoe-io/idpbuilder/pkg/controllers/localbuild/controller.go")))))}d.isMDXComponent=!0}}]);