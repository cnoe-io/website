"use strict";(self.webpackChunkcnoe=self.webpackChunkcnoe||[]).push([[5319],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,d=u["".concat(l,".").concat(m)]||u[m]||f[m]||i;return n?r.createElement(d,a(a({ref:t},p),{},{components:n})):r.createElement(d,a({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2194:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>f,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const i={sidebar_position:3,description:"Tooling to extend the IDP"},a="Extensions",s={unversionedId:"reference-implementation/extensions/extensions",id:"reference-implementation/extensions/extensions",title:"Extensions",description:"Tooling to extend the IDP",source:"@site/docs/reference-implementation/extensions/extensions.md",sourceDirName:"reference-implementation/extensions",slug:"/reference-implementation/extensions/",permalink:"/docs/reference-implementation/extensions/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reference-implementation/extensions/extensions.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,description:"Tooling to extend the IDP"},sidebar:"tutorialSidebar",previous:{title:"Infrastructure Control Plane",permalink:"/docs/reference-implementation/configs/control-plane"},next:{title:"Templating of CRDs / XRDs",permalink:"/docs/reference-implementation/extensions/crd-templating"}},l={},c=[],p={toc:c},u="wrapper";function f(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"extensions"},"Extensions"),(0,o.kt)("admonition",{title:"github repo",type:"note"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("a",{parentName:"p",href:"https://github.com/cnoe-io/cnoe-cli"},"cnoe-io/cnoe-cli"))),(0,o.kt)("p",null,"Part of creating an internal developer platform includes building cohesion\naround developer workflows."),(0,o.kt)("p",null,"With CNCF technologies, most, if not all, developer workflows involve\ninteracting with Kubernetes as the underlying platform via CRDs and operators.\nBut also the majority of the work an IDP enables is to tie back the developer\nworkflow to the underlying infrastructure."),(0,o.kt)("p",null,"We have build the CNOE CLI to bring tooling to the IDP experience that\nstreamlines some common developer workflows. This involves tooling that\nhelps with migrating developer workflows to your developer portal. This also\ninvolves adding verifications and extensions to developer workflows."))}f.isMDXComponent=!0}}]);