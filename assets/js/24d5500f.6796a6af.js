"use strict";(self.webpackChunkcnoe=self.webpackChunkcnoe||[]).push([[4370],{3905:(e,o,r)=>{r.d(o,{Zo:()=>p,kt:()=>y});var t=r(7294);function n(e,o,r){return o in e?Object.defineProperty(e,o,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[o]=r,e}function a(e,o){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);o&&(t=t.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var o=1;o<arguments.length;o++){var r=null!=arguments[o]?arguments[o]:{};o%2?a(Object(r),!0).forEach((function(o){n(e,o,r[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(r,o))}))}return e}function l(e,o){if(null==e)return{};var r,t,n=function(e,o){if(null==e)return{};var r,t,n={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],o.indexOf(r)>=0||(n[r]=e[r]);return n}(e,o);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],o.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=t.createContext({}),c=function(e){var o=t.useContext(s),r=o;return e&&(r="function"==typeof e?e(o):i(i({},o),e)),r},p=function(e){var o=c(e.components);return t.createElement(s.Provider,{value:o},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var o=e.children;return t.createElement(t.Fragment,{},o)}},f=t.forwardRef((function(e,o){var r=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(r),f=n,y=u["".concat(s,".").concat(f)]||u[f]||d[f]||a;return r?t.createElement(y,i(i({ref:o},p),{},{components:r})):t.createElement(y,i({ref:o},p))}));function y(e,o){var r=arguments,n=o&&o.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=f;var l={};for(var s in o)hasOwnProperty.call(o,s)&&(l[s]=o[s]);l.originalType=e,l[u]="string"==typeof e?e:n,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}f.displayName="MDXCreateElement"},8391:(e,o,r)=>{r.r(o),r.d(o,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var t=r(7462),n=(r(7294),r(3905));const a={sidebar_position:2,description:"Enable developers to collaborate on configuration asynchronously while keeping historical lineage of changes."},i="Code Repositories",l={unversionedId:"intro/capabilities/code-repository",id:"intro/capabilities/code-repository",title:"Code Repositories",description:"Enable developers to collaborate on configuration asynchronously while keeping historical lineage of changes.",source:"@site/docs/intro/capabilities/code-repository.mdx",sourceDirName:"intro/capabilities",slug:"/intro/capabilities/code-repository",permalink:"/docs/intro/capabilities/code-repository",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro/capabilities/code-repository.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,description:"Enable developers to collaborate on configuration asynchronously while keeping historical lineage of changes."},sidebar:"tutorialSidebar",previous:{title:"Packaging and Templating",permalink:"/docs/intro/capabilities/packaging-and-templating"},next:{title:"Config Repositories",permalink:"/docs/intro/capabilities/config-repository"}},s={},c=[],p={toc:c};function u(e){let{components:o,...r}=e;return(0,n.kt)("wrapper",(0,t.Z)({},p,r,{components:o,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"code-repositories"},"Code Repositories"),(0,n.kt)("p",null,"Code repositories are a historical lineage of changes to a codebase (think source code for apps and libraries).\nThey allow for developers to work collaboratively on common codebases and often asynchronously.\nWhile git and other source control tooling can allow for decentralized collaboration, usually we choose to centralize the common workflows associated with code review and automation driven by git aka \u201cgit-ops\u201d.\nWhen appropriately hardened and durable, pull requests (and associated merges to protected branches) can be used as a \u201csystem of record\u201d for change control and approval in regulatory environments"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Allows for developers to collaborate on code asynchronously",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"This includes peer reviews and change request approvals"))),(0,n.kt)("li",{parentName:"ul"},"Usually centralized even when using decentralized tooling like git for the purposes of building workflows"),(0,n.kt)("li",{parentName:"ul"},"They can also be the mechanism used for peer reviews and change request approvals")))}u.isMDXComponent=!0}}]);